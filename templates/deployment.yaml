apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ioc-chart.release" . }}
  labels:
    {{- include "ioc-chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ioc-chart.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "ioc-chart.release" . }}
  template:
    metadata:
      labels:
        {{- include "ioc-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName | quote }}
      {{- end }}
      securityContext:
        {{ toYaml .Values.securityContext | indent 8 }}
      {{- if .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- if .Values.gitRepoConfig.url }}
      initContainers:
        - name: init-container-git
          image: baltig.infn.it:4567/epics-containers/container-init
          securityContext:
            {{ toYaml .Values.securityContext | indent 12 }}
          command: 
            - sh 
            - -c
            - |
              id=`id`
              cd /pvc
              echo "#!/bin/sh" > k8sreplace.sh
              chmod +x k8sreplace.sh
              echo 'sed -i "s|__IOC_TOP__|{{ .Values.iocConfig }}|g" $1' >> k8sreplace.sh
              {{- if .Values.iocprefix }}
              echo 'sed -i "s|__IOC_PREFIX__|{{.Values.iocprefix}}|g" $1' >> k8sreplace.sh
              {{- end }}
              {{- if .Values.iocname }}
              echo 'sed -i "s|__IOC_NAME__|{{.Values.iocname}}|g" $1' >> k8sreplace.sh
              {{- end }}
              {{- range .Values.nfsMounts }}
              echo 'sed -i "s|__{{ .name | upper }}_DIR__|{{ .mountPath }}/{{ $.Values.iocname }}|g" $1' >> k8sreplace.sh
              {{- end }}
              {{- range .Values.iocparam }}
              echo 'sed -i "s|{{.name}}|{{.value}}|g" $1' >> k8sreplace.sh
              {{- end }}
              echo "ID $id cloning: {{ .Values.gitRepoConfig.url }} {{ .Values.gitRepoConfig.path }} revision {{ .Values.gitRepoConfig.branch }}"
              if [ -d temp-config ]; then
                rm -rf temp-config
              fi
              if [ -n "{{ .Values.gitRepoConfig.branch }}" ]; then
                git clone -b {{ .Values.gitRepoConfig.branch }} {{ .Values.gitRepoConfig.url }} --recurse-submodules temp-config
              else
                git clone {{ .Values.gitRepoConfig.url }} --recurse-submodules temp-config
              fi
              find temp-config/ -type f -exec ./k8sreplace.sh {} \;
              echo "* applied substitutions "`cat ./k8sreplace.sh`

              if [ -d temp-config/{{ .Values.gitRepoConfig.path }} ]; then
                if [ "{{ .Values.gitRepoConfig.path }}" == "." ]; then
                  mv temp-config/* /pvc/
                else
                  mv temp-config/{{ .Values.gitRepoConfig.path }}/* /pvc/
                  rm -rf temp-config
                fi
              else
                mv temp-config/* /pvc/
              fi

              ls /pvc
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /pvc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      terminationGracePeriodSeconds: 15
      volumes:
        {{- if .Values.runtimeClaim }}
        - name: runtime-volume
          persistentVolumeClaim:
            claimName: {{ .Values.runtimeClaim }}
        {{- end }}
        {{- if .Values.opisClaim }}
        - name: opis-volume
          persistentVolumeClaim:
            claimName: {{ .Values.opisClaim }}
        {{- end }}
        {{- if .Values.nfsv2TftpClaim }}
        - name: nfsv2-tftp-volume
          persistentVolumeClaim:
            claimName: {{ .Values.nfsv2TftpClaim }}
        {{- end }}
        - name: autosave-volume
          persistentVolumeClaim:
            {{- if .Values.autosave }}
            claimName: {{ .Values.autosave }}
            {{- else }}
            claimName: {{ include "ioc-chart.release" . }}-autosave
            {{- end }}
        {{- if .Values.dataVolume.pvc }}
        - name: data-volume
          persistentVolumeClaim:
            claimName: {{ include "ioc-chart.release" . }}-data
        {{- end }}
        {{- if .Values.gitRepoConfig.url }}
        - name: config-volume
          persistentVolumeClaim:
            claimName: {{ include "ioc-chart.release" . }}-gitconfig
        {{- else }}
        - name: config-volume
          configMap:
            name: {{ include "ioc-chart.release" . }}
        {{- end }}
        {{- range .Values.nfsMounts }}
        - name: {{ .name }}
          nfs:
            server: {{ .server }}
            path: {{ .path }}
        {{- end }}
      containers:
        - name: {{ include "ioc-chart.release" . }}
          image: {{ .Values.image }}
          securityContext:
            {{ toYaml .Values.securityContext | indent 12 }}
          command:
            - sh 
            - -c
            - |
              {{- if .Values.carepeater }}
              echo "Starting caRepeater"
              caRepeater&
              {{- end }}
              {{- range .Values.nfsMounts }}
              mkdir -p {{ .mountPath | quote }}/{{ $.Values.iocname }}
              {{- end }}
              {{- if and (.Values.serial.ip) (.Values.serial.port) }}
              echo "opening {{ .Values.serial.ptty }},raw,echo=0,b{{ .Values.serial.baud }} tcp:{{ .Values.serial.ip }}:{{ .Values.serial.port }}"
              socat pty,link={{ .Values.serial.ptty }},raw,echo=0,b{{ .Values.serial.baud }} tcp:{{ .Values.serial.ip }}:{{ .Values.serial.port }}&
              sleep 1
              if [ -e {{ .Values.serial.ptty }} ]; then
                echo "tty {{ .Values.serial.ptty }}"
              else
                echo "## failed tty {{ .Values.serial.ptty }} "
                exit 1
              fi
              {{- end }}
              {{- if .Values.start }}
              {{ .Values.start }}
              {{- end }}
          ports:
            - containerPort: 5064
            - containerPort: 5065
          {{- if .Values.liveness }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - {{ .Values.liveness }}
            initialDelaySeconds: 120
            periodSeconds: 10
          {{- end }}
          {{- if .Values.stop }}
          lifecycle:
            preStop:
              exec:
                command: ["bash", "-c", "{{ .Values.stop }}"]
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.iocConfig }}
            {{- if .Values.autosave }}
            - name: autosave-volume
              mountPath: /autosave
            {{- end }}
            {{- if .Values.dataVolume.pvc }}
            - name: data-volume
              mountPath: {{ .Values.dataVolume.hostPath }}
              {{- if .Values.dataVolume.hostPath }}
              mountPropagation: HostToContainer
              {{- end }}
            {{- end }}
            {{- if .Values.nfsv2TftpClaim }}
            - name: nfsv2-tftp-volume
              mountPath: /nfsv2-tftp
              subPath: "{{ .Values.beamline }}/{{ include "ioc-chart.release" . }}"
            {{- end }}
            {{- if .Values.runtimeClaim }}
            - name: runtime-volume
              mountPath: /epics/runtime
              subPath: "{{ include "ioc-chart.release" . }}"
            {{- end }}
            {{- if .Values.opisClaim }}
            - name: opis-volume
              mountPath: /epics/opi
              subPath: "{{ include "ioc-chart.release" . }}"
            {{- end }}
            {{- range .Values.nfsMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
          stdin: true
          tty: true
          imagePullPolicy: Always
          {{- if .Values.epicsConfiguration.name }}
          envFrom:
            - configMapRef:
                name: {{ .Values.epicsConfiguration.name }}
          {{- end }}
          env:
            {{- range .Values.nfsMounts }}
            - name: {{ .name | upper }}_SERVER
              value: {{ .server | quote }}
            - name: {{ .name | upper }}_SERVER_PATH
              value: {{ .path | quote }}
            - name: {{ .name | upper }}_DIR
              value: {{ .mountPath | quote }}
            {{- end }}
            - name: IOCSH_PS1
              value: "{{ include "ioc-chart.release" . }} > "
            - name: IOC_NAME
              value: "{{ .Release.Name }}"
            - name: IOC_PREFIX
              value: {{ or .Values.prefix .Release.Name | quote }}
            - name: IOC_VERSION
              value: {{ .Values.ioc_version | quote }}
            {{- if .Values.epicsConfiguration.gateway }}
            - name: EPICS_CA_ADDR_LIST
              value: {{ .Values.epicsConfiguration.gateway | quote }}
            - name: EPICS_CA_AUTO_ADDR_LIST
              value: "NO"
            {{- end }}
            {{- range $envVar := .Values.env }}
            - name: {{ $envVar.name }}
              value: {{ $envVar.value | quote }}
            {{- end }}
            {{- range $envVar := .Values.globalenv }}
            - name: {{ $envVar.name }}
              value: {{ $envVar.value | quote }}
            {{- end }}
      {{- if .Values.useAffinity }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beamline
                    operator: In
                    values:
                      - {{ .Values.beamline }}
      {{- end }}
      tolerations:
        - key: nodetype
          operator: Equal
          value: {{ .Values.beamline }}
          effect: NoSchedule

  volumeClaimTemplates:
    {{- if .Values.runtimeClaim }}
    - metadata:
        name: runtime-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- end }}
    {{- if .Values.opisClaim }}
    - metadata:
        name: opis-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- end }}
    {{- if .Values.nfsv2TftpClaim }}
    - metadata:
        name: nfsv2-tftp-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- end }}
    - metadata:
        name: autosave-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- if .Values.dataVolume.pvc }}
    - metadata:
        name: data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- end }}
    {{- if .Values.gitRepoConfig.url }}
    - metadata:
        name: config-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- else }}
    - metadata:
        name: config-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    {{- end }}
